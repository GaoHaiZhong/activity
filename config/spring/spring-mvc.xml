<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd ">
		
		<!-- 加载属性文件 -->
		<context:property-placeholder location="classpath:resources.properties"/>

    <!-- 开启controller注解支持 -->
    <!-- 有一个use-default-filters属性，改属性默认为true,
    这就意味着会扫描指定包下的全部的标有@Component的类，并注册成bean.
    也就是@Component的子注解@Service,@Reposity等
    而不能这样写base-package=”com.fq”。这种写法对于include-filter来讲它都会扫描，
    而不是仅仅扫描@Controller。哈哈哈，这点需要注意。
    他一般会导致一个常见的错误，那就是事务不起作用，
    补救的方法是添加use-default-filters=”false”。-->
    <context:component-scan base-package="com.ghz.controller" use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>


    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="com.ghz.bind.method.CurrentUserMethodArgumentResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>

    <!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/"/>


    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 控制器异常处理解析器-->
    <bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
    </bean>
   <!-- 如果抛出UnauthorizedException，将被该异常处理器截获来显示没有权限信息。 
   -->
    <bean class="com.ghz.ExceptionHandler.DefaultExceptionHandler"/>
    <bean id="user" class="com.ghz.pojo.Role"></bean>

    <import resource="spring-mvc-shiro.xml"/>
		
</beans>